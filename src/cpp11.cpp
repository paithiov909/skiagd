// Generated by cpp11: do not edit by hand
// clang-format off

#include "skiagd_types.h"
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// skiagd.cpp
bool test1();
extern "C" SEXP _skiagd_test1() {
  BEGIN_CPP11
    return cpp11::as_sexp(test1());
  END_CPP11
}
// skiagd.cpp
uint32_t test2(const cpp11::integers& fill);
extern "C" SEXP _skiagd_test2(SEXP fill) {
  BEGIN_CPP11
    return cpp11::as_sexp(test2(cpp11::as_cpp<cpp11::decay_t<const cpp11::integers&>>(fill)));
  END_CPP11
}
// skiagd.cpp
std::string sk_save_png(const cpp11::integers& size, const cpp11::raws& curr_bytes, const std::string& filename);
extern "C" SEXP _skiagd_sk_save_png(SEXP size, SEXP curr_bytes, SEXP filename) {
  BEGIN_CPP11
    return cpp11::as_sexp(sk_save_png(cpp11::as_cpp<cpp11::decay_t<const cpp11::integers&>>(size), cpp11::as_cpp<cpp11::decay_t<const cpp11::raws&>>(curr_bytes), cpp11::as_cpp<cpp11::decay_t<const std::string&>>(filename)));
  END_CPP11
}
// skiagd.cpp
cpp11::raws sk_absolute_fill(const cpp11::integers& size, const cpp11::integers& fill);
extern "C" SEXP _skiagd_sk_absolute_fill(SEXP size, SEXP fill) {
  BEGIN_CPP11
    return cpp11::as_sexp(sk_absolute_fill(cpp11::as_cpp<cpp11::decay_t<const cpp11::integers&>>(size), cpp11::as_cpp<cpp11::decay_t<const cpp11::integers&>>(fill)));
  END_CPP11
}
// skiagd.cpp
cpp11::raws sk_circle(const cpp11::integers& size, const cpp11::raws& curr_bytes, double x, double y, double r, const cpp11::list& props);
extern "C" SEXP _skiagd_sk_circle(SEXP size, SEXP curr_bytes, SEXP x, SEXP y, SEXP r, SEXP props) {
  BEGIN_CPP11
    return cpp11::as_sexp(sk_circle(cpp11::as_cpp<cpp11::decay_t<const cpp11::integers&>>(size), cpp11::as_cpp<cpp11::decay_t<const cpp11::raws&>>(curr_bytes), cpp11::as_cpp<cpp11::decay_t<double>>(x), cpp11::as_cpp<cpp11::decay_t<double>>(y), cpp11::as_cpp<cpp11::decay_t<double>>(r), cpp11::as_cpp<cpp11::decay_t<const cpp11::list&>>(props)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_skiagd_sk_absolute_fill", (DL_FUNC) &_skiagd_sk_absolute_fill, 2},
    {"_skiagd_sk_circle",        (DL_FUNC) &_skiagd_sk_circle,        6},
    {"_skiagd_sk_save_png",      (DL_FUNC) &_skiagd_sk_save_png,      3},
    {"_skiagd_test1",            (DL_FUNC) &_skiagd_test1,            0},
    {"_skiagd_test2",            (DL_FUNC) &_skiagd_test2,            1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_skiagd(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
