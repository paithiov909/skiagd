# Generated by roxygen2: do not edit by hand

S3method("$",BlendMode__bundle)
S3method("$",BlurStyle__bundle)
S3method("$",Cap__bundle)
S3method("$",FillType__bundle)
S3method("$",FontStyle__bundle)
S3method("$",Join__bundle)
S3method("$",PointMode__bundle)
S3method("$",Style__bundle)
S3method("$",TileMode__bundle)
S3method("$",VertexMode__bundle)
S3method("$<-",savvy_skiagd__sealed)
S3method("[[",BlendMode__bundle)
S3method("[[",BlurStyle__bundle)
S3method("[[",Cap__bundle)
S3method("[[",FillType__bundle)
S3method("[[",FontStyle__bundle)
S3method("[[",Join__bundle)
S3method("[[",PointMode__bundle)
S3method("[[",Style__bundle)
S3method("[[",TileMode__bundle)
S3method("[[",VertexMode__bundle)
S3method("[[<-",savvy_skiagd__sealed)
S3method(c,PathEffect)
S3method(c,Shader)
S3method(print,BlendMode)
S3method(print,BlendMode__bundle)
S3method(print,BlurStyle)
S3method(print,BlurStyle__bundle)
S3method(print,Cap)
S3method(print,Cap__bundle)
S3method(print,FillType)
S3method(print,FillType__bundle)
S3method(print,FontStyle)
S3method(print,FontStyle__bundle)
S3method(print,ImageFilter)
S3method(print,ImageFilter__bundle)
S3method(print,Join)
S3method(print,Join__bundle)
S3method(print,PaintAttrs__bundle)
S3method(print,PathEffect)
S3method(print,PathEffect__bundle)
S3method(print,PointMode)
S3method(print,PointMode__bundle)
S3method(print,RuntimeEffect__bundle)
S3method(print,Shader)
S3method(print,Shader__bundle)
S3method(print,Style)
S3method(print,Style__bundle)
S3method(print,TileMode)
S3method(print,TileMode__bundle)
S3method(print,VertexMode)
S3method(print,VertexMode__bundle)
export("%timer%")
export(BlendMode)
export(BlurStyle)
export(Cap)
export(FillType)
export(FontStyle)
export(ImageFilter)
export(Join)
export(PathEffect)
export(PointMode)
export(RuntimeEffect)
export(Shader)
export(Style)
export(TileMode)
export(VertexMode)
export(add_arc)
export(add_atlas)
export(add_circle)
export(add_diff_rect)
export(add_line)
export(add_path)
export(add_png)
export(add_point)
export(add_rect)
export(add_text)
export(add_vertices)
export(as_png)
export(as_recordedplot)
export(canvas)
export(col2rgba)
export(create_mapping)
export(dev_size)
export(draw_img)
export(freeze)
export(list_font_families)
export(paint)
export(path_bounds)
export(path_interpolate)
export(path_transform)
export(text_info)
importFrom(rlang,env_get)
useDynLib(skiagd, .registration = TRUE)
